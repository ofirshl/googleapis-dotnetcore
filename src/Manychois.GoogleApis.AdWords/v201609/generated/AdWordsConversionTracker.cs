using System;
using System.Collections.Generic;
using System.Xml.Linq;

namespace Manychois.GoogleApis.AdWords.v201609
{
	/// <summary>
	/// A conversion tracker created through AdWords Conversion Tracking.
	/// </summary>
	public class AdWordsConversionTracker : ConversionTracker, ISoapable
	{
		/// <summary>
		/// The generated snippet for this conversion tracker. This snippet is
		/// auto-generated by the API, and will be ignored in mutate operands. This
		/// field will always be returned. If the other fields are not selected, the
		/// snippet will use default values for them.
		/// <span class="constraint ReadOnly">This field is read only and will be ignored when sent to the API.</span>
		/// </summary>
		public string Snippet { get; set; }
		/// <summary>
		/// Text format for the site stats logo.
		/// <span class="constraint Selectable">This field can be selected using the value "TextFormat".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public AdWordsConversionTrackerTextFormat? TextFormat { get; set; }
		/// <summary>
		/// Language used on the conversion page.
		/// <span class="constraint Selectable">This field can be selected using the value "ConversionPageLanguage".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public string ConversionPageLanguage { get; set; }
		/// <summary>
		/// Background color for the site stats logo as a hex triplet (e.g. "99ccff").
		/// <span class="constraint Selectable">This field can be selected using the value "BackgroundColor".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public string BackgroundColor { get; set; }
		/// <summary>
		/// Tracking code to use for the conversion type.
		/// <span class="constraint Selectable">This field can be selected using the value "TrackingCodeType".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public AdWordsConversionTrackerTrackingCodeType? TrackingCodeType { get; set; }
		public override void ReadFrom(XElement xE)
		{
			base.ReadFrom(xE);
			Snippet = null;
			TextFormat = null;
			ConversionPageLanguage = null;
			BackgroundColor = null;
			TrackingCodeType = null;
			foreach (var xItem in xE.Elements())
			{
				var localName = xItem.Name.LocalName;
				if (localName == "snippet")
				{
					Snippet = xItem.Value;
				}
				else if (localName == "textFormat")
				{
					TextFormat = AdWordsConversionTrackerTextFormatExtensions.Parse(xItem.Value);
				}
				else if (localName == "conversionPageLanguage")
				{
					ConversionPageLanguage = xItem.Value;
				}
				else if (localName == "backgroundColor")
				{
					BackgroundColor = xItem.Value;
				}
				else if (localName == "trackingCodeType")
				{
					TrackingCodeType = AdWordsConversionTrackerTrackingCodeTypeExtensions.Parse(xItem.Value);
				}
			}
		}
		public override void WriteTo(XElement xE)
		{
			base.WriteTo(xE);
			XmlUtility.SetXsiType(xE, "https://adwords.google.com/api/adwords/cm/v201609", "AdWordsConversionTracker");
			XElement xItem = null;
			if (Snippet != null)
			{
				xItem = new XElement(XName.Get("snippet", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(Snippet);
				xE.Add(xItem);
			}
			if (TextFormat != null)
			{
				xItem = new XElement(XName.Get("textFormat", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(TextFormat.Value.ToXmlValue());
				xE.Add(xItem);
			}
			if (ConversionPageLanguage != null)
			{
				xItem = new XElement(XName.Get("conversionPageLanguage", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(ConversionPageLanguage);
				xE.Add(xItem);
			}
			if (BackgroundColor != null)
			{
				xItem = new XElement(XName.Get("backgroundColor", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(BackgroundColor);
				xE.Add(xItem);
			}
			if (TrackingCodeType != null)
			{
				xItem = new XElement(XName.Get("trackingCodeType", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(TrackingCodeType.Value.ToXmlValue());
				xE.Add(xItem);
			}
		}
	}
}
