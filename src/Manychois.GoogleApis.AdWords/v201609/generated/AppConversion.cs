using System;
using System.Collections.Generic;
using System.Xml.Linq;

namespace Manychois.GoogleApis.AdWords.v201609
{
	/// <summary>
	/// A ConversionTracker for mobile apps.
	/// </summary>
	public class AppConversion : ConversionTracker, ISoapable
	{
		/// <summary>
		/// App ID of the app conversion tracker. This field is required for certain
		/// conversion types, in particular, Android app install (first open) and
		/// Android app install (from Google Play).
		/// <span class="constraint Selectable">This field can be selected using the value "AppId".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public string AppId { get; set; }
		/// <summary>
		/// App platform of the app conversion tracker. This field defaults to NONE.
		/// Once it is set to a value other than NONE it cannot be changed again. It must be
		/// set at the same time as AppConversionType.
		/// <span class="constraint Selectable">This field can be selected using the value "AppPlatform".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public AppConversionAppPlatform? AppPlatform { get; set; }
		/// <summary>
		/// The generated snippet for this conversion tracker. This snippet is
		/// auto-generated by the API, and will be ignored in mutate operands. This
		/// field will always be returned.
		/// <span class="constraint ReadOnly">This field is read only and will be ignored when sent to the API.</span>
		/// </summary>
		public string Snippet { get; set; }
		/// <summary>
		/// The type of AppConversion, which identifies a conversion as being either download or
		/// in-app purchase. This field can only be set once and future reads will populate the type
		/// appropriately. It is an error to change the value once it is set. This field must be set
		/// at the same time as AppPlatform.
		/// </summary>
		public AppConversionAppConversionType? AppConversionType { get; set; }
		/// <summary>
		/// The postback URL. When the conversion type specifies a postback url,
		/// Google will send information about each conversion event to that url as they happen.
		/// Details, including formatting requirements for this field:
		/// https://developers.google.com/app-conversion-tracking/docs/app-install-feedback
		/// <span class="constraint Selectable">This field can be selected using the value "AppPostbackUrl".</span><span class="constraint Filterable">This field can be filtered on.</span>
		/// </summary>
		public string AppPostbackUrl { get; set; }
		public override void ReadFrom(XElement xE)
		{
			base.ReadFrom(xE);
			AppId = null;
			AppPlatform = null;
			Snippet = null;
			AppConversionType = null;
			AppPostbackUrl = null;
			foreach (var xItem in xE.Elements())
			{
				var localName = xItem.Name.LocalName;
				if (localName == "appId")
				{
					AppId = xItem.Value;
				}
				else if (localName == "appPlatform")
				{
					AppPlatform = AppConversionAppPlatformExtensions.Parse(xItem.Value);
				}
				else if (localName == "snippet")
				{
					Snippet = xItem.Value;
				}
				else if (localName == "appConversionType")
				{
					AppConversionType = AppConversionAppConversionTypeExtensions.Parse(xItem.Value);
				}
				else if (localName == "appPostbackUrl")
				{
					AppPostbackUrl = xItem.Value;
				}
			}
		}
		public override void WriteTo(XElement xE)
		{
			base.WriteTo(xE);
			XmlUtility.SetXsiType(xE, "https://adwords.google.com/api/adwords/cm/v201609", "AppConversion");
			XElement xItem = null;
			if (AppId != null)
			{
				xItem = new XElement(XName.Get("appId", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(AppId);
				xE.Add(xItem);
			}
			if (AppPlatform != null)
			{
				xItem = new XElement(XName.Get("appPlatform", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(AppPlatform.Value.ToXmlValue());
				xE.Add(xItem);
			}
			if (Snippet != null)
			{
				xItem = new XElement(XName.Get("snippet", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(Snippet);
				xE.Add(xItem);
			}
			if (AppConversionType != null)
			{
				xItem = new XElement(XName.Get("appConversionType", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(AppConversionType.Value.ToXmlValue());
				xE.Add(xItem);
			}
			if (AppPostbackUrl != null)
			{
				xItem = new XElement(XName.Get("appPostbackUrl", "https://adwords.google.com/api/adwords/cm/v201609"));
				xItem.Add(AppPostbackUrl);
				xE.Add(xItem);
			}
		}
	}
}
